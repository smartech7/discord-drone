workspace:
  base: /go/src
  path: github.com/appleboy/drone-discord

clone:
  git:
    image: plugins/git
    depth: 50
    tags: true

pipeline:
  lint:
    image: golang:1.11
    pull: true
    group: golang
    commands:
      - make vet
      - make lint
      - make test-vendor
      - make misspell-check

  test:
    image: appleboy/golang-testing:1.10.0
    pull: true
    group: golang
    secrets: [ webhook_id, webhook_token ]
    commands:
      - make test
      - make coverage

  build_linux_amd64:
    image: golang:1.11
    pull: true
    group: build
    commands:
      - make build_linux_amd64

  build_linux_i386:
    image: golang:1.11
    pull: true
    group: build
    commands:
      - make build_linux_i386

  build_linux_arm64:
    image: golang:1.11
    pull: true
    group: build
    commands:
      - make build_linux_arm64

  build_linux_arm:
    image: golang:1.11
    pull: true
    group: build
    commands:
      - make build_linux_arm

  codecov:
    image: robertstettner/drone-codecov
    secrets: [ codecov_token ]
    when:
      event: [ push, pull_request ]
      status: [ success ]

  release:
    image: golang:1.11
    pull: true
    commands:
      - make release
    when:
      event: [ tag ]
      branch: [ refs/tags/* ]

  publish_linux_amd64:
    image: plugins/docker:17.12
    group: release
    pull: true
    repo: ${DRONE_REPO}
    secrets: [ docker_username, docker_password ]
    auto_tag: true
    auto_tag_suffix: linux-amd64
    when:
      event: [ push, tag ]
      local: false

  publish_alpine:
    image: plugins/docker:17.12
    group: release
    pull: true
    dockerfile: Dockerfile.alpine
    secrets: [ docker_username, docker_password ]
    auto_tag: true
    auto_tag_suffix: linux-alpine
    repo: ${DRONE_REPO}
    when:
      event: [ push, tag ]
      local: false

  publish_linux_i386:
    image: plugins/docker:17.12
    pull: true
    secrets: [ docker_username, docker_password ]
    group: release
    repo: ${DRONE_REPO}
    auto_tag: true
    auto_tag_suffix: linux-i386
    dockerfile: Dockerfile.i386
    when:
      event: [ push, tag ]
      local: false

  publish_linux_arm64:
    image: plugins/docker:17.12
    pull: true
    secrets: [ docker_username, docker_password ]
    group: release
    repo: ${DRONE_REPO}
    auto_tag: true
    auto_tag_suffix: linux-arm64
    dockerfile: Dockerfile.arm64
    when:
      event: [ push, tag ]
      local: false

  publish_linux_arm:
    image: plugins/docker:17.12
    pull: true
    secrets: [ docker_username, docker_password ]
    group: release
    repo: ${DRONE_REPO}
    auto_tag: true
    auto_tag_suffix: linux-arm
    dockerfile: Dockerfile.arm
    when:
      event: [ push, tag ]
      local: false

  github:
    image: plugins/github-release
    secrets: [ github_release_api_key ]
    files:
      - dist/release/*
    when:
      event: [ tag ]
      branch: [ refs/tags/* ]

  discord:
    image: appleboy/drone-discord
    pull: true
    secrets:
      - source: webhook_prod_id
        target: webhook_id
      - source: webhook_prod_token
        target: webhook_token
    message: >
      {{#success build.status}}
        build {{build.number}} succeeded. Good job.
      {{else}}
        build {{build.number}} failed. Fix me please.
      {{/success}}
    when:
      status: [ success, failure ]
